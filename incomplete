import random
import sys  #user will use this to exit the game
import pygame
from pygame.locals import *  #basic pygame imports

FPS=32
SCREENWIDTH=289
SCREENHEIGHT=511
SCREEN=pygame.display.set_mode((SCREENWIDTH,SCREENHEIGHT))
GROUNDY=SCREENHEIGHT*0.8
GAME_SPRITES={}
GAME_SOUNDS={}
PLAYER="Gallery/sprites/bird.png"
BACKGROUND="Gallery/sprites/background.png"
PIPE="Gallery/sprites/pipe.png"

def welcomeScreen():
    '''
    shows images on the welcome screen
    '''
    playerx=int(SCREENWIDTH/5)
    playery=int((SCREENHEIGHT -GAME_SPRITES['player'].get_height())/2)
    messagex=int((SCREENWIDTH -(GAME_SPRITES['message'].get_width()))/2)
    messagey=int(SCREENHEIGHT*0.13)
    basex=0
    while True:
        for event in pygame.event.get():
            #if user clicks cross button, quit game
            if event.type==QUIT or (event.type==KEYDOWN and event.key==K_ESCAPE):
                pygame.quit()
                sys.exit()
            elif event.type==KEYDOWN and (event.key==K_SPACE or event.key== K_UP):
                return
            else:
                SCREEN.blit(GAME_SPRITES["background"],(0,0))
                SCREEN.blit(GAME_SPRITES["player"],(playerx,playery))
                SCREEN.blit(GAME_SPRITES["message"],(messagex,messagey))
                SCREEN.blit(GAME_SPRITES["base"],(basex,GROUNDY))
                pygame.display.update()
                FPSCLOCK.tick(FPS)
def mainGame():
    score=0
    playerx=int(SCREENWIDTH/5)
    playery=int(SCREENWIDTH/2)
    basex=0

    # create 2 bipes for blitting on screen
    newPipe1=getRandomPipe()
    newPipe2=getRandomPipe()
def getRandomPipe():
    """
    Generate position of 2 pipes (1 bottom straight and 1 top rotated) for blitting on the screen
    """
    # pipeHeight=GAME_SPRITES["pipe"][0].get_height()
    # offset=SCREENHEIGHT/3
    # y2=offset*random.randrange(0,int(SCREENHEIGHT-GAME_SPRITES["base"].get_height()-1.2*offset))
    # pipeX=SCREENWIDTH+10
    # y1=pipeHeight-y2+offset
    # pipe=[
    #     {"x":pipeX,"y":-y1},
    #     {"x":pipeX,"y":y2}
    #  ]
    # return pipe


if __name__=="__main__":
    pygame.init()
    FPSCLOCK=pygame.time.Clock()
    pygame.display.set_caption("Flappy Bird by Dev")
    GAME_SPRITES["numbers"]=(
        pygame.image.load("Gallery/sprites/0.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/1.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/2.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/3.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/4.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/5.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/6.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/7.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/8.png").convert_alpha(),
        pygame.image.load("Gallery/sprites/9.png").convert_alpha()
        )
    GAME_SPRITES["message"]=pygame.image.load("Gallery/sprites/message.png").convert_alpha()
    GAME_SPRITES["base"]=pygame.image.load("Gallery/sprites/base.png").convert_alpha()
    GAME_SPRITES["pipe"]=(
        pygame.transform.rotate(pygame.image.load(PIPE).convert_alpha(),180),
        pygame.image.load(PIPE).convert_alpha()
        )
    GAME_SPRITES["player"]=pygame.image.load(PLAYER).convert_alpha()
    GAME_SPRITES["background"]=pygame.image.load(BACKGROUND).convert()

    GAME_SOUNDS["die"]=pygame.mixer.Sound("Gallery/audio/die.wav")
    GAME_SOUNDS["hit"]=pygame.mixer.Sound("Gallery/audio/hit.wav")
    GAME_SOUNDS["point"]=pygame.mixer.Sound("Gallery/audio/point.wav")
    GAME_SOUNDS["swoosh"]=pygame.mixer.Sound("Gallery/audio/swoosh.wav")
    GAME_SOUNDS["wing"]=pygame.mixer.Sound("Gallery/audio/wing.wav")

    while True:
        welcomeScreen()
        mainGame()

